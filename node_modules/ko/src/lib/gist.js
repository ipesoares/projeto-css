import Conf from 'conf';
import Ora from 'ora';
import chalk from 'chalk';

import { log, error, z, tokenKey, getFileContent, request } from './utils';

const conf = new Conf();

export async function testGistToken(token) {
  // Let response = await request({}, token);
  // Let body = await response.json();
  // Return body.message === 'Bad credentials';
  return token === '';
}

export async function init(input, config = conf) {
  let spinner = new Ora(`Initializing ${z}`).start();

  if (await testGistToken(input[1])) {
    config.set(tokenKey, input[1]);
    spinner.succeed();
    log(`${chalk.green.bold('Success:')} ${z} initialized with a new token.`);
    return;
  }

  spinner.fail();
  log(`${error} Token is invalid. Try a different token.`);
}

export async function backup(config = conf) {
  let file = getFileContent(config.path);

  let requestBody = {
    public: true,
    files: {
      [config.path]: {
        content: file
      }
    }
  };

  let options = {
    method: 'POST',
    body: JSON.stringify(requestBody),
    headers: { 'Content-Type': 'application/json' }
  };

  let response = await request(options);
  let { id } = await response.json();
  log(id);
}
